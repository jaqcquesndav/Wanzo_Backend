name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.13.0'
        cache: 'yarn'
    
    - name: Install dependencies
      run: |
        yarn install --frozen-lockfile
    
    - name: Lint
      run: |
        yarn lint
    
    - name: Test
      run: |
        yarn test
    
    - name: Build
      run: |
        yarn build

  docker-build:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Build and push Docker images
      run: |
        # Pour chaque service que vous souhaitez construire et publier
        cd apps/accounting-service
        docker build -t wanzobe/accounting-service:latest -f Dockerfile .
        docker push wanzobe/accounting-service:latest
        
        cd ../admin-service
        docker build -t wanzobe/admin-service:latest -f Dockerfile .
        docker push wanzobe/admin-service:latest
        
        # Ajoutez d'autres services selon vos besoins
