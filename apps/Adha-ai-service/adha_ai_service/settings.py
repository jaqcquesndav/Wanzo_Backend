"""
Django settings for adha_ai_service project.

Generated by 'django-admin startproject' using Django 4.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv
from datetime import timedelta

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'your_default_secret_key')  # Use environment variable in production

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # Set to False in production

ALLOWED_HOSTS = []  # Add your domain(s) or IP addresses here when DEBUG is False

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'drf_yasg',
    'api',
    'agents',
]

INSTALLED_APPS += ['rest_framework.authtoken']

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'api.middleware.enhanced_isolation.EnhancedIsolationMiddleware',  # ðŸ”’ ISOLATION CRITIQUE
    'api.middleware.JSONResponseMiddleware',  # Add custom middleware
    'api.middleware.company_isolation.CompanyIsolationMiddleware',
    'api.middleware.subscription_middleware.SubscriptionMiddleware',  # Add the subscription middleware
    'api.middleware.prometheus_middleware.PrometheusBeforeAfterMiddleware',  # Prometheus middleware
]

ROOT_URLCONF = 'adha_ai_service.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'adha_ai_service.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('DB_DATABASE', 'adha-ai-service'),
        'USER': os.environ.get('DB_USERNAME', 'postgres'),
        'PASSWORD': os.environ.get('DB_PASSWORD', 'd2487a19465f468aa0bdfb7e04c35579'),
        'HOST': os.environ.get('DB_HOST', 'localhost'),
        'PORT': os.environ.get('DB_PORT', '5432'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'fr'

TIME_ZONE = 'Africa/Kinshasa'  # Adjust to your timezone if needed

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Django REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',  # Adjust permissions as needed
    ],
    'DEFAULT_PAGINATION_CLASS': None,
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

# JWT Settings
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),      # DurÃ©e du token d'accÃ¨s: 60 minutes
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),         # DurÃ©e du refresh token: 1 jour
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': False,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',

    'JTI_CLAIM': 'jti',
}

# === AUTH0 JWT CENTRALISÃ‰ ===
AUTH0_JWKS_URL = os.environ.get('AUTH0_JWKS_URL', 'https://YOUR_AUTH0_DOMAIN/.well-known/jwks.json')
AUTH0_AUDIENCE = os.environ.get('AUTH0_AUDIENCE', 'YOUR_AUTH0_AUDIENCE')
AUTH0_ISSUER = os.environ.get('AUTH0_ISSUER', 'https://YOUR_AUTH0_DOMAIN/')

REST_FRAMEWORK['DEFAULT_AUTHENTICATION_CLASSES'] = [
    'api.authentication.JWTAuth0Authentication',
]

# Swagger settings (drf-yasg)
SWAGGER_SETTINGS = {
    'DEFAULT_AUTO_SCHEMA_CLASS': 'api.swagger_schema.CustomSwaggerAutoSchema',
    'USE_SESSION_AUTH': False,
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    },
    'DEFAULT_INFO': None,  # Remove default info - we'll specify per schema view
    'APIS_SORTER': 'alpha',
    'OPERATIONS_SORTER': 'alpha',
    'VALIDATOR_URL': None,
    'DISPLAY_OPERATION_ID': False,
    'DOC_EXPANSION': 'list',
    'SUPPORTED_SUBMIT_METHODS': ['get', 'post', 'put', 'delete', 'patch'],
}

# Admin API Swagger settings
ADMIN_SWAGGER_SETTINGS = {
    'DEFAULT_AUTO_SCHEMA_CLASS': 'api.swagger_schema.CustomAdminSwaggerAutoSchema',
    'DEFAULT_GENERATOR_CLASS': 'api.swagger_schema.AdminSchemaGenerator',
}

# Company API Swagger settings
COMPANY_SWAGGER_SETTINGS = {
    'DEFAULT_AUTO_SCHEMA_CLASS': 'api.swagger_schema.CustomCompanySwaggerAutoSchema',
    'DEFAULT_GENERATOR_CLASS': 'api.swagger_schema.CompanySchemaGenerator',
}

REDOC_SETTINGS = {
    'LAZY_RENDERING': False,
    'HIDE_HOSTNAME': False,
    'EXPAND_RESPONSES': '200,201',
}

# CORS settings (if you need to handle Cross-Origin Requests)
# If you plan to access your API from a different domain (e.g., a frontend on a different port),
# you might need to configure CORS. Install django-cors-headers and add it to INSTALLED_APPS
# and MIDDLEWARE.
#
# INSTALLED_APPS += ['corsheaders']
#
# MIDDLEWARE = [
#     'corsheaders.middleware.CorsMiddleware',
#     # ... other middleware
# ]
#
# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:3000",  # Example origin for a React frontend
#     "http://127.0.0.1:3000",
# ]
# CORS_ALLOW_ALL_ORIGINS = False  # Set to True only for development, False in production


# Path to your configuration file
CONFIG_PATH = BASE_DIR / 'config' / 'config.yaml'

# Path to your knowledge base directory
KNOWLEDGE_BASE_PATH = BASE_DIR / 'data' / 'knowledge_base'

# Path to your embeddings directory (if using ChromaDB locally)
EMBEDDINGS_PATH = BASE_DIR / 'data' / 'embeddings'

# ðŸ”— CUSTOMER SERVICE INTEGRATION
CUSTOMER_SERVICE_URL = os.environ.get('CUSTOMER_SERVICE_URL', 'http://kiota-customer-service:3011')

# ðŸš€ PERFORMANCE SETTINGS
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.redis.RedisCache',
        'LOCATION': os.environ.get('REDIS_URL', 'redis://localhost:6379/0'),
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        },
        'KEY_PREFIX': 'adha_ai',
        'TIMEOUT': 3600,  # 1 heure par dÃ©faut
    }
}

# ðŸ“Š ISOLATION CACHE SETTINGS
ISOLATION_CACHE_TTL = 3600  # 1 heure pour les contextes d'isolation
SESSION_CACHE_TTL = 14400   # 4 heures pour les sessions actives

# Ensure directories exist
os.makedirs(KNOWLEDGE_BASE_PATH, exist_ok=True)
os.makedirs(EMBEDDINGS_PATH, exist_ok=True)
