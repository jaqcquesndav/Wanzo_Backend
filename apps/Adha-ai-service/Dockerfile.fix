FROM python:3.10-slim-bookworm

WORKDIR /app

# Installation des dépendances système
RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
        build-essential \
        libgl1-mesa-glx \
        libglib2.0-0 \
        git \
        procps && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Copier d'abord les requirements pour profiter du cache Docker
COPY apps/Adha-ai-service/requirements.txt ./

# Installation des dépendances Python avec versions fixes pour résoudre l'incompatibilité
# cached_download existe dans huggingface_hub<=0.15.1
RUN pip install --upgrade pip setuptools wheel && \
    pip install --no-cache-dir \
                --timeout 600 \
                --retries 10 \
                huggingface_hub==0.15.1 && \
    pip install --no-cache-dir \
                --timeout 600 \
                --retries 10 \
                -r requirements.txt

# Copier les fichiers du projet dans le conteneur
COPY apps/Adha-ai-service/adha_ai_service ./adha_ai_service
COPY apps/Adha-ai-service/api ./api
COPY apps/Adha-ai-service/agents ./agents
COPY apps/Adha-ai-service/config ./config
COPY apps/Adha-ai-service/manage.py ./

# Script d'entrée
COPY apps/Adha-ai-service/docker-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

# Créer un utilisateur non-root pour exécuter l'application
RUN groupadd -r appgroup && \
    useradd -r -g appgroup -d /app -s /bin/bash appuser && \
    mkdir -p /app/logs /app/data /app/static /app/media && \
    chown -R appuser:appgroup /app

# Exposer le port de l'API
EXPOSE 8000

# Définir le point d'entrée
USER appuser
ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]
