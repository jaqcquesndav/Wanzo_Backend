version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: wanzo-postgres-local
    ports:
      - "5432:5432"  # Accessible depuis l'host
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: d2487a19465f468aa0bdfb7e04c35579
      POSTGRES_MULTIPLE_DATABASES: admin-service,accounting-service,analytics-service,portfolio-institution-service,gestion_commerciale_service,adha-ai-service,customer-service
    volumes:
      - postgres_data_local:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: wanzo-zookeeper-local
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"  # Accessible depuis l'host
    restart: unless-stopped

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: wanzo-kafka-local
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"   # Port externe pour les services locaux
      - "29092:29092" # Port interne pour Docker
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # Configuration pour permettre l'acc√®s depuis l'host ET depuis docker
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data_local:

networks:
  default:
    name: wanzo-local-network
