services:
  # Kafka and Zookeeper services
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - wanzo
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - wanzo
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: kiota-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: d2487a19465f468aa0bdfb7e04c35579
      POSTGRES_MULTIPLE_DATABASES: admin_service,accounting_service,analytics_service,portfolio_institution_service,gestion_commerciale_service,adha_ai_service,customer_service
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - wanzo
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Service API Gateway - Point d'entrée unique
  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
    container_name: kiota-api-gateway
    ports:
      - "0.0.0.0:8000:8000"
    environment:
      - NODE_ENV=production
      - AUTH_SERVICE_URL=http://kiota-admin-service:3001
      - ADMIN_SERVICE_URL=http://kiota-admin-service:3001
      - ANALYTICS_SERVICE_URL=http://kiota-analytics-service:3002
      - ACCOUNTING_SERVICE_URL=http://kiota-accounting-service:3001
      - PORTFOLIO_INSTITUTION_SERVICE_URL=http://kiota-portfolio-institution-service:3005
      - GESTION_COMMERCIALE_SERVICE_URL=http://kiota-gestion-commerciale-service:3006
      - ADHA_AI_SERVICE_URL=http://kiota-adha-ai-service:8002
      - CUSTOMER_SERVICE_URL=http://kiota-customer-service:3011
      - PROMETHEUS_PORT=9464
      # Auth0 Configuration
      - AUTH0_DOMAIN=dev-tezmln0tk0g1gouf.eu.auth0.com
      - AUTH0_AUDIENCE=https://api.wanzo.com
      - AUTH0_CLIENT_ID=dsgwiRH7Y2diqygL2GKO893Ptc7KpG5N
      - AUTH0_CLIENT_SECRET=oYj1rF1Nr78WaRXQK5Pt9tO0uWQuZyCWdXvGMbnlnw9lVj8RBHq0PofxJqlJevKr
      - AUTH0_NAMESPACE=dev-tezmln0tk0g1gouf.eu.auth0.com
      - AUTH0_CERTIFICATE_PATH=./auth0-certificate.pem
      # Auth0 M2M Configuration
      - AUTH0_M2M_CLIENT_ID=dsgwiRH7Y2diqygL2GKO893Ptc7KpG5N
      - AUTH0_M2M_CLIENT_SECRET=oYj1rF1Nr78WaRXQK5Pt9tO0uWQuZyCWdXvGMbnlnw9lVj8RBHq0PofxJqlJevKr
    env_file:
      - ./apps/api-gateway/.env
    volumes:
      - api-gateway-logs:/app/apps/api-gateway/logs
    depends_on:
      - admin-service
      - accounting-service
      - analytics-service
      - portfolio-institution-service
      - gestion-commerciale-service
      - adha-ai-service
      - customer-service
    networks:
      - wanzo
    restart: unless-stopped
    profiles:
      - prod

  api-gateway-dev:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
      target: builder
    container_name: kiota-api-gateway-dev
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - AUTH_SERVICE_URL=http://kiota-admin-service-dev:3001
      - ADMIN_SERVICE_URL=http://kiota-admin-service-dev:3001
      - ANALYTICS_SERVICE_URL=http://kiota-analytics-service-dev:3002
      - ACCOUNTING_SERVICE_URL=http://kiota-accounting-service-dev:3001
      - PORTFOLIO_INSTITUTION_SERVICE_URL=http://kiota-portfolio-institution-service-dev:3005
      - GESTION_COMMERCIALE_SERVICE_URL=http://kiota-gestion-commerciale-service-dev:3006
      - ADHA_AI_SERVICE_URL=http://kiota-adha-ai-service:8002
      - CUSTOMER_SERVICE_URL=http://kiota-customer-service-dev:3011
    volumes:
      - ./apps/api-gateway/src:/app/apps/api-gateway/src
      - ./packages/shared/src:/app/packages/shared/src
      - /app/apps/api-gateway/node_modules
    command: yarn workspace @kiota-suit/api-gateway dev
    depends_on:
      - admin-service-dev
      - accounting-service-dev
      - analytics-service-dev
      - portfolio-institution-service-dev
      - gestion-commerciale-service-dev
      - customer-service-dev
    networks:
      - wanzo
    profiles:
      - dev

  # Admin Service (Production)
  admin-service:
    build:
      context: .
      dockerfile: ./apps/admin-service/Dockerfile
    container_name: kiota-admin-service
    ports:
      - "3001:3001"
      - "9464:9464" # Port Prometheus
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=d2487a19465f468aa0bdfb7e04c35579
      - DB_DATABASE=admin-service
      - KAFKA_BROKERS=kafka:29092
      - KAFKA_CLIENT_ID=admin-service
      - KAFKA_GROUP_ID=admin-service-group
      - PROMETHEUS_PORT=9464
      # Auth0 Configuration
      - AUTH0_DOMAIN=dev-tezmln0tk0g1gouf.eu.auth0.com
      - AUTH0_AUDIENCE=https://api.wanzo.com
      - AUTH0_CLIENT_ID=dsgwiRH7Y2diqygL2GKO893Ptc7KpG5N
      - AUTH0_CLIENT_SECRET=oYj1rF1Nr78WaRXQK5Pt9tO0uWQuZyCWdXvGMbnlnw9lVj8RBHq0PofxJqlJevKr
      - AUTH0_NAMESPACE=dev-tezmln0tk0g1gouf.eu.auth0.com
      - AUTH0_CERTIFICATE_PATH=./auth0-certificate.pem
      # Auth0 M2M Configuration
      - AUTH0_M2M_CLIENT_ID=dsgwiRH7Y2diqygL2GKO893Ptc7KpG5N
      - AUTH0_M2M_CLIENT_SECRET=oYj1rF1Nr78WaRXQK5Pt9tO0uWQuZyCWdXvGMbnlnw9lVj8RBHq0PofxJqlJevKr
    env_file:
      - ./apps/admin-service/.env
    volumes:
      - admin-service-logs:/app/apps/admin-service/logs
    depends_on:
      - postgres
      - kafka
    networks:
      - wanzo
    restart: unless-stopped
    profiles:
      - prod
      
  # Admin Service (Development)
  admin-service-dev:
    build:
      context: .
      dockerfile: ./apps/admin-service/Dockerfile
      target: builder # Use builder stage with dev dependencies
    container_name: kiota-admin-service-dev
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=d2487a19465f468aa0bdfb7e04c35579
      - DB_DATABASE=admin-service
      - KAFKA_BROKERS=kafka:29092
      # Auth0 Configuration
      - AUTH0_DOMAIN=dev-tezmln0tk0g1gouf.eu.auth0.com
      - AUTH0_AUDIENCE=https://api.wanzo.com
      - AUTH0_CERTIFICATE_PATH=./auth0-certificate.pem
      - AUTH0_NAMESPACE=dev-tezmln0tk0g1gouf.eu.auth0.com
    volumes:
      - ./apps/admin-service/src:/app/apps/admin-service/src
      - ./packages/shared/src:/app/packages/shared/src
      - /app/apps/admin-service/node_modules # Anonymous volume
    command: yarn start:dev
    depends_on:
      - postgres
      - kafka
    networks:
      - wanzo
    profiles:
      - dev

  # Accounting Service (Production)
  accounting-service:
    build:
      context: .
      dockerfile: ./apps/accounting-service/Dockerfile
    container_name: kiota-accounting-service
    ports:
      - "3003:3001" # Port 3001 in container
      - "9465:9464"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=d2487a19465f468aa0bdfb7e04c35579
      - DB_DATABASE=accounting-service
      - KAFKA_BROKERS=kafka:29092
      - KAFKA_CLIENT_ID=accounting-service
      - KAFKA_GROUP_ID=accounting-service-group
      - PROMETHEUS_PORT=9464
      # Auth0 Configuration
      - AUTH0_DOMAIN=dev-tezmln0tk0g1gouf.eu.auth0.com
      - AUTH0_AUDIENCE=https://api.wanzo.com
      - AUTH0_CLIENT_ID=dsgwiRH7Y2diqygL2GKO893Ptc7KpG5N
      - AUTH0_CLIENT_SECRET=oYj1rF1Nr78WaRXQK5Pt9tO0uWQuZyCWdXvGMbnlnw9lVj8RBHq0PofxJqlJevKr
      - AUTH0_NAMESPACE=dev-tezmln0tk0g1gouf.eu.auth0.com
      - AUTH0_CERTIFICATE_PATH=./auth0-certificate.pem
      # Auth0 M2M Configuration
      - AUTH0_M2M_CLIENT_ID=dsgwiRH7Y2diqygL2GKO893Ptc7KpG5N
      - AUTH0_M2M_CLIENT_SECRET=oYj1rF1Nr78WaRXQK5Pt9tO0uWQuZyCWdXvGMbnlnw9lVj8RBHq0PofxJqlJevKr
    env_file:
      - ./apps/accounting-service/.env
    volumes:
      - accounting-service-logs:/app/apps/accounting-service/logs
    depends_on:
      - postgres
      - kafka
    networks:
      - wanzo
    restart: unless-stopped
    profiles:
      - prod

  # Accounting Service (Development)
  accounting-service-dev:
    build:
      context: .
      dockerfile: ./apps/accounting-service/Dockerfile
      target: builder # Use builder stage with dev dependencies
    container_name: kiota-accounting-service-dev
    ports:
      - "3003:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=d2487a19465f468aa0bdfb7e04c35579
      - DB_DATABASE=accounting-service
      - KAFKA_BROKERS=kafka:29092
    volumes:
      - ./apps/accounting-service/src:/app/apps/accounting-service/src
      - ./packages/shared/src:/app/packages/shared/src
      - /app/apps/accounting-service/node_modules # Anonymous volume
    command: yarn workspace @kiota-suit/accounting-service dev
    depends_on:
      - postgres
      - kafka
    networks:
      - wanzo
    profiles:
      - dev

  # Analytics Service (Production)
  analytics-service:
    build:
      context: .
      dockerfile: ./apps/analytics-service/Dockerfile
    container_name: kiota-analytics-service
    ports:
      - "3002:3002"
      - "9466:9464" # Port Prometheus (mapping différent)
    environment:
      - NODE_ENV=production
      - PORT=3002
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=d2487a19465f468aa0bdfb7e04c35579
      - DB_DATABASE=analytics-service
      - KAFKA_BROKERS=kafka:29092
      - KAFKA_CLIENT_ID=analytics-service
      - KAFKA_GROUP_ID=analytics-service-group
      - PROMETHEUS_PORT=9464
      # Auth0 Configuration
      - AUTH0_DOMAIN=dev-tezmln0tk0g1gouf.eu.auth0.com
      - AUTH0_AUDIENCE=https://api.wanzo.com
      - AUTH0_CLIENT_ID=dsgwiRH7Y2diqygL2GKO893Ptc7KpG5N
      - AUTH0_CLIENT_SECRET=oYj1rF1Nr78WaRXQK5Pt9tO0uWQuZyCWdXvGMbnlnw9lVj8RBHq0PofxJqlJevKr
      - AUTH0_NAMESPACE=dev-tezmln0tk0g1gouf.eu.auth0.com
      - AUTH0_CERTIFICATE_PATH=./auth0-certificate.pem
      # Auth0 M2M Configuration
      - AUTH0_M2M_CLIENT_ID=dsgwiRH7Y2diqygL2GKO893Ptc7KpG5N
      - AUTH0_M2M_CLIENT_SECRET=oYj1rF1Nr78WaRXQK5Pt9tO0uWQuZyCWdXvGMbnlnw9lVj8RBHq0PofxJqlJevKr
    env_file:
      - ./apps/analytics-service/.env
    volumes:
      - analytics-service-logs:/app/apps/analytics-service/logs
    depends_on:
      - postgres
      - kafka
    networks:
      - wanzo
    restart: unless-stopped
    profiles:
      - prod
      
  # Analytics Service (Development)
  analytics-service-dev:
    build:
      context: .
      dockerfile: ./apps/analytics-service/Dockerfile
      target: builder # Use builder stage with dev dependencies
    container_name: kiota-analytics-service-dev
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=d2487a19465f468aa0bdfb7e04c35579
      - DB_DATABASE=analytics-service
      - KAFKA_BROKERS=kafka:29092
    volumes:
      - ./apps/analytics-service/src:/app/apps/analytics-service/src
      - ./packages/shared/src:/app/packages/shared/src
      - /app/apps/analytics-service/node_modules # Anonymous volume
    command: yarn start:dev
    depends_on:
      - postgres
      - kafka
    networks:
      - wanzo
    profiles:
      - dev



  # Portfolio Institution Service (Production)
  portfolio-institution-service:
    build:
      context: .
      dockerfile: ./apps/portfolio-institution-service/Dockerfile
    container_name: kiota-portfolio-institution-service
    ports:
      - "3005:3005"
      - "9468:9464" # Port Prometheus (mapping différent)
    environment:
      - NODE_ENV=production
      - PORT=3005
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=d2487a19465f468aa0bdfb7e04c35579
      - DB_DATABASE=portfolio-institution-service
      - KAFKA_BROKERS=kafka:29092
      - KAFKA_CLIENT_ID=portfolio-institution-service
      - KAFKA_GROUP_ID=portfolio-institution-service-group
      - PROMETHEUS_PORT=9464
      # Auth0 Configuration
      - AUTH0_DOMAIN=dev-tezmln0tk0g1gouf.eu.auth0.com
      - AUTH0_AUDIENCE=https://api.wanzo.com
      - AUTH0_CLIENT_ID=dsgwiRH7Y2diqygL2GKO893Ptc7KpG5N
      - AUTH0_CLIENT_SECRET=oYj1rF1Nr78WaRXQK5Pt9tO0uWQuZyCWdXvGMbnlnw9lVj8RBHq0PofxJqlJevKr
      - AUTH0_NAMESPACE=dev-tezmln0tk0g1gouf.eu.auth0.com
      - AUTH0_CERTIFICATE_PATH=./auth0-certificate.pem
      # Auth0 M2M Configuration
      - AUTH0_M2M_CLIENT_ID=dsgwiRH7Y2diqygL2GKO893Ptc7KpG5N
      - AUTH0_M2M_CLIENT_SECRET=oYj1rF1Nr78WaRXQK5Pt9tO0uWQuZyCWdXvGMbnlnw9lVj8RBHq0PofxJqlJevKr
    env_file:
      - ./apps/portfolio-institution-service/.env
    volumes:
      - portfolio-institution-service-logs:/app/apps/portfolio-institution-service/logs
    depends_on:
      - postgres
      - kafka
    networks:
      - wanzo
    restart: unless-stopped
    profiles:
      - prod
      
  # Portfolio Institution Service (Development)
  portfolio-institution-service-dev:
    build:
      context: .
      dockerfile: ./apps/portfolio-institution-service/Dockerfile
      target: builder # Use builder stage with dev dependencies
    container_name: kiota-portfolio-institution-service-dev
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - PORT=3005
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=d2487a19465f468aa0bdfb7e04c35579
      - DB_DATABASE=portfolio-institution-service
      - KAFKA_BROKERS=kafka:29092
      # Auth0 Configuration
      - AUTH0_DOMAIN=dev-tezmln0tk0g1gouf.eu.auth0.com
      - AUTH0_AUDIENCE=https://api.wanzo.com
      - AUTH0_CERTIFICATE_PATH=./auth0-certificate.pem
      - AUTH0_NAMESPACE=dev-tezmln0tk0g1gouf.eu.auth0.com
    volumes:
      - ./apps/portfolio-institution-service/src:/app/apps/portfolio-institution-service/src
      - ./packages/shared/src:/app/packages/shared/src
      - /app/apps/portfolio-institution-service/node_modules # Anonymous volume
    command: yarn start:dev
    depends_on:
      - postgres
      - kafka
    networks:
      - wanzo
    profiles:
      - dev

  # Gestion Commerciale Service
  gestion-commerciale-service:
    build:
      context: .
      dockerfile: ./apps/gestion_commerciale_service/Dockerfile
    container_name: kiota-gestion-commerciale-service
    ports:
      - "3006:3006"
      - "9469:9464" # Port Prometheus (mapping différent)
    environment:
      - NODE_ENV=production
      - PORT=3006
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=d2487a19465f468aa0bdfb7e04c35579
      - DB_DATABASE=gestion_commerciale_service
      - KAFKA_BROKERS=kafka:29092
      - KAFKA_CLIENT_ID=gestion-commerciale-service
      - KAFKA_GROUP_ID=gestion-commerciale-service-group
      - PROMETHEUS_PORT=9464
      # Auth0 Configuration
      - AUTH0_DOMAIN=dev-tezmln0tk0g1gouf.eu.auth0.com
      - AUTH0_AUDIENCE=https://api.wanzo.com
      - AUTH0_CLIENT_ID=dsgwiRH7Y2diqygL2GKO893Ptc7KpG5N
      - AUTH0_CLIENT_SECRET=oYj1rF1Nr78WaRXQK5Pt9tO0uWQuZyCWdXvGMbnlnw9lVj8RBHq0PofxJqlJevKr
      - AUTH0_NAMESPACE=dev-tezmln0tk0g1gouf.eu.auth0.com
      - AUTH0_CERTIFICATE_PATH=./auth0-certificate.pem
      # Auth0 M2M Configuration
      - AUTH0_M2M_CLIENT_ID=dsgwiRH7Y2diqygL2GKO893Ptc7KpG5N
      - AUTH0_M2M_CLIENT_SECRET=oYj1rF1Nr78WaRXQK5Pt9tO0uWQuZyCWdXvGMbnlnw9lVj8RBHq0PofxJqlJevKr
    env_file:
      - ./apps/gestion_commerciale_service/.env
    volumes:
      - gestion-commerciale-service-logs:/app/apps/gestion_commerciale_service/logs
    depends_on:
      - postgres
      - kafka
    networks:
      - wanzo
    restart: unless-stopped
    profiles:
      - prod

  # Gestion Commerciale Service (Development)
  gestion-commerciale-service-dev:
    build:
      context: .
      dockerfile: ./apps/gestion_commerciale_service/Dockerfile
      target: builder # Use builder stage with dev dependencies
    container_name: kiota-gestion-commerciale-service-dev
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=development
      - PORT=3006
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=d2487a19465f468aa0bdfb7e04c35579
      - DB_DATABASE=gestion_commerciale_service
      - KAFKA_BROKERS=kafka:29092
    volumes:
      - ./apps/gestion_commerciale_service/src:/app/apps/gestion_commerciale_service/src
      - ./packages/shared/src:/app/packages/shared/src
      - /app/apps/gestion_commerciale_service/node_modules # Anonymous volume
    command: yarn start:dev
    depends_on:
      - postgres
      - kafka
    networks:
      - wanzo
    profiles:
      - dev

  # Adha AI Service
  adha-ai-service:
    build:
      context: .
      dockerfile: ./apps/Adha-ai-service/Dockerfile
    container_name: kiota-adha-ai-service
    ports:
      - "8002:8002"
      - "9464:9464" # Port Prometheus standardisé
    environment:
      - DJANGO_SETTINGS_MODULE=adha_ai_service.settings
      - PORT=8002
      - KAFKA_ENV=docker
      - KAFKA_BROKER_INTERNAL=kafka:29092
      - KAFKA_BROKER_EXTERNAL=localhost:9092
      - PROMETHEUS_PORT=9464
      - POSTGRES_DB=adha-ai-service
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=d2487a19465f468aa0bdfb7e04c35579
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - DLQ_ENABLED=true
      - DLQ_MAX_RETRIES=3
      - DLQ_RETRY_DELAY_MS=5000
      # Auth0 Configuration
      - AUTH0_DOMAIN=dev-tezmln0tk0g1gouf.eu.auth0.com
      - AUTH0_AUDIENCE=https://api.wanzo.com
      - AUTH0_CLIENT_ID=dsgwiRH7Y2diqygL2GKO893Ptc7KpG5N
      - AUTH0_CLIENT_SECRET=oYj1rF1Nr78WaRXQK5Pt9tO0uWQuZyCWdXvGMbnlnw9lVj8RBHq0PofxJqlJevKr
      - AUTH0_NAMESPACE=dev-tezmln0tk0g1gouf.eu.auth0.com
      - AUTH0_CERTIFICATE_PATH=./auth0-certificate.pem
      # Auth0 M2M Configuration
      - AUTH0_M2M_CLIENT_ID=dsgwiRH7Y2diqygL2GKO893Ptc7KpG5N
      - AUTH0_M2M_CLIENT_SECRET=oYj1rF1Nr78WaRXQK5Pt9tO0uWQuZyCWdXvGMbnlnw9lVj8RBHq0PofxJqlJevKr
    env_file:
      - ./apps/Adha-ai-service/.env
    volumes:
      - ./apps/Adha-ai-service/data:/app/data
    depends_on:
      - postgres
      - kafka
      - prometheus
      - grafana
    networks:
      - wanzo
    restart: unless-stopped

  # Customer Service (Production)
  customer-service:
    build:
      context: .
      dockerfile: ./apps/customer-service/Dockerfile
    container_name: kiota-customer-service
    ports:
      - "3011:3011"
      - "9471:9464"
    environment:
      - NODE_ENV=production
      - PORT=3011
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=d2487a19465f468aa0bdfb7e04c35579
      - DB_DATABASE=customer-service
      - KAFKA_BROKERS=kafka:29092
      - KAFKA_CLIENT_ID=customer-service
      - KAFKA_GROUP_ID=customer-service-group
      - PROMETHEUS_PORT=9464
      # Auth0 Configuration
      - AUTH0_DOMAIN=dev-tezmln0tk0g1gouf.eu.auth0.com
      - AUTH0_AUDIENCE=https://api.wanzo.com
      - AUTH0_CLIENT_ID=dsgwiRH7Y2diqygL2GKO893Ptc7KpG5N
      - AUTH0_CLIENT_SECRET=oYj1rF1Nr78WaRXQK5Pt9tO0uWQuZyCWdXvGMbnlnw9lVj8RBHq0PofxJqlJevKr
      - AUTH0_NAMESPACE=dev-tezmln0tk0g1gouf.eu.auth0.com
      - AUTH0_CERTIFICATE_PATH=./auth0-certificate.pem
      # Auth0 M2M Configuration
      - AUTH0_M2M_CLIENT_ID=dsgwiRH7Y2diqygL2GKO893Ptc7KpG5N
      - AUTH0_M2M_CLIENT_SECRET=oYj1rF1Nr78WaRXQK5Pt9tO0uWQuZyCWdXvGMbnlnw9lVj8RBHq0PofxJqlJevKr
    env_file:
      - ./apps/customer-service/.env
    volumes:
      - customer-service-logs:/app/apps/customer-service/logs
    depends_on:
      - postgres
      - kafka
    networks:
      - wanzo
    restart: unless-stopped
    profiles:
      - prod

  # Customer Service (Development)
  customer-service-dev:
    build:
      context: .
      dockerfile: ./apps/customer-service/Dockerfile
      target: builder # Use builder stage with dev dependencies
    container_name: kiota-customer-service-dev
    ports:
      - "3011:3011"
    environment:
      - NODE_ENV=development
      - PORT=3011
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=d2487a19465f468aa0bdfb7e04c35579
      - DB_DATABASE=customer-service
      - KAFKA_BROKERS=kafka:29092
      # Auth0 Configuration
      - AUTH0_DOMAIN=dev-tezmln0tk0g1gouf.eu.auth0.com
      - AUTH0_AUDIENCE=https://api.wanzo.com
      - AUTH0_CERTIFICATE_PATH=./auth0-certificate.pem
      - AUTH0_NAMESPACE=dev-tezmln0tk0g1gouf.eu.auth0.com
    volumes:
      - ./apps/customer-service/src:/app/apps/customer-service/src
      - ./packages/shared/src:/app/packages/shared/src
      - /app/apps/customer-service/node_modules # Anonymous volume
    command: yarn workspace @wanzobe/customer-service dev
    depends_on:
      - postgres
      - kafka
    networks:
      - wanzo
    profiles:
      - dev

  # Monitoring services
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: kiota-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --web.enable-lifecycle
    networks:
      - wanzo
    restart: unless-stopped
    # Pas de profil pour les outils de monitoring

  # Grafana for visualization
  grafana:
    image: grafana/grafana:10.0.3
    container_name: kiota-grafana
    ports:
      - "4000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - wanzo
    restart: unless-stopped
    # Pas de profil pour les outils de monitoring

volumes:
  api-gateway-logs:
  admin-service-logs:
  accounting-service-logs:
  analytics-service-logs:
  portfolio-institution-service-logs:
  gestion-commerciale-service-logs:
  adha-ai-service-data:
  customer-service-logs:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  wanzo:
    driver: bridge
